<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>centos 7 安装docker harbor (https)</title>
      <link href="2021/02/23/centos-7-%E5%AE%89%E8%A3%85docker-harbor-https/"/>
      <url>2021/02/23/centos-7-%E5%AE%89%E8%A3%85docker-harbor-https/</url>
      
        <content type="html"><![CDATA[<h1 id="安装准备："><a href="#安装准备：" class="headerlink" title="安装准备："></a>安装准备：</h1><p>IP: 192.168.153.105 （harbor端）  centos 7 系统</p><h2 id="安装docker环境和docker-compose-两台主机同时安装"><a href="#安装docker环境和docker-compose-两台主机同时安装" class="headerlink" title="安装docker环境和docker-compose (两台主机同时安装)"></a>安装docker环境和docker-compose (两台主机同时安装)</h2><p>ip: 192.168.153.105</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖包</span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载docker yum源</span></span><br><span class="line">wget http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker</span></span><br><span class="line">yum install docker-ce -y</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置docker自启动</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置镜像加速</span></span><br><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://6ze43vnb.mirror.aliyuncs.com&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传docker-compose-Linux-x86_64，并移动到/usr/bin/下,设置文件755权限</span></span><br><span class="line">mv docker-compose-Linux-x86_64 /usr/<span class="built_in">bin</span>/docker-compose</span><br><span class="line">chmod <span class="number">755</span> /usr/<span class="built_in">bin</span>/docker-compose</span><br></pre></td></tr></table></figure><p>所需的包 <a href="https://pan.baidu.com/s/1ZVNgLhaf9GG4u0kr_4R1HA">https://pan.baidu.com/s/1ZVNgLhaf9GG4u0kr_4R1HA</a>（密码p1c7）</p><h2 id="解压离线包部署-（192-168-153-105）"><a href="#解压离线包部署-（192-168-153-105）" class="headerlink" title="解压离线包部署 （192.168.153.105）"></a>解压离线包部署 （192.168.153.105）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 解压harbor-offline-installer-v1.9.1.tgz，并移动到/usr/local/下</span></span><br><span class="line">tar zxvf harbor-offline-installer-v1<span class="number">.9</span><span class="number">.1</span>.tgz &amp;&amp; mv -f harbor /usr/local/harbor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入harbor目录中</span></span><br><span class="line">cd /usr/local/harbor</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改harbor.yml配置</span></span><br><span class="line">vi harbor.yml</span><br><span class="line">hostname: regis.myharbor.com</span><br></pre></td></tr></table></figure><h2 id="配置harbor证书"><a href="#配置harbor证书" class="headerlink" title="配置harbor证书"></a>配置harbor证书</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;usr&#x2F;local&#x2F;harbor</span><br><span class="line"># mkdir ssl &amp;&amp; cd ssl</span><br></pre></td></tr></table></figure><h3 id="生成CA证书私钥-ca-key"><a href="#生成CA证书私钥-ca-key" class="headerlink" title="生成CA证书私钥 (ca.key)"></a>生成CA证书私钥 (ca.key)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># openssl genrsa -out ca.key 4096</span><br></pre></td></tr></table></figure><h3 id="生成CA证书-ca-crt"><a href="#生成CA证书-ca-crt" class="headerlink" title="生成CA证书 (ca.crt)"></a>生成CA证书 (ca.crt)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># regis.myharbor.com 是你 harbor的网址</span><br><span class="line">openssl req -x509 -new -nodes -sha512 -days 3650 \</span><br><span class="line"> -subj &quot;&#x2F;C&#x3D;CN&#x2F;ST&#x3D;Beijing&#x2F;L&#x3D;Beijing&#x2F;O&#x3D;harbor&#x2F;OU&#x3D;Harbor&#x2F;CN&#x3D;regis.myharbor.com&quot; \</span><br><span class="line"> -key ca.key \</span><br><span class="line"> -out ca.crt</span><br></pre></td></tr></table></figure><h3 id="生成服务器证书-regis-myharbor-com-key"><a href="#生成服务器证书-regis-myharbor-com-key" class="headerlink" title="生成服务器证书  (regis.myharbor.com.key)"></a>生成服务器证书  (regis.myharbor.com.key)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># openssl genrsa -out regis.myharbor.com.key 4096</span><br></pre></td></tr></table></figure><h3 id="生成证书签名请求-regis-myharbor-com-csr"><a href="#生成证书签名请求-regis-myharbor-com-csr" class="headerlink" title="生成证书签名请求 (regis.myharbor.com.csr)"></a>生成证书签名请求 (regis.myharbor.com.csr)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">openssl req -sha512 -new \</span><br><span class="line">    -subj &quot;&#x2F;C&#x3D;CN&#x2F;ST&#x3D;Beijing&#x2F;L&#x3D;Beijing&#x2F;O&#x3D;harbor&#x2F;OU&#x3D;Harbor&#x2F;CN&#x3D;regis.myharbor.com&quot; \</span><br><span class="line">    -key regis.myharbor.com.key \</span><br><span class="line">    -out regis.myharbor.com.csr</span><br></pre></td></tr></table></figure><h3 id="生成x509-v3扩展文件"><a href="#生成x509-v3扩展文件" class="headerlink" title="生成x509 v3扩展文件"></a>生成x509 v3扩展文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; v3.ext &lt;&lt;-EOF</span><br><span class="line">authorityKeyIdentifier&#x3D;keyid,issuer</span><br><span class="line">basicConstraints&#x3D;CA:FALSE</span><br><span class="line">keyUsage &#x3D; digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment</span><br><span class="line">extendedKeyUsage &#x3D; serverAuth</span><br><span class="line">subjectAltName &#x3D; @alt_names</span><br><span class="line"></span><br><span class="line">[alt_names]</span><br><span class="line">DNS.1&#x3D;regis.myharbor.com</span><br><span class="line">DNS.2&#x3D;regis</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="使用该文件生成证书-regis-myharbor-com-crt"><a href="#使用该文件生成证书-regis-myharbor-com-crt" class="headerlink" title="使用该文件生成证书 (regis.myharbor.com.crt)"></a>使用该文件生成证书 (regis.myharbor.com.crt)</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -req -sha512 -days 3650 \</span><br><span class="line">    -extfile v3.ext \</span><br><span class="line">    -CA ca.crt -CAkey ca.key -CAcreateserial \</span><br><span class="line">    -in regis.myharbor.com.csr \</span><br><span class="line">    -out regis.myharbor.com.crt</span><br></pre></td></tr></table></figure><h3 id="生成-PEM-（regis-myharbor-com-cert）"><a href="#生成-PEM-（regis-myharbor-com-cert）" class="headerlink" title="生成 PEM （regis.myharbor.com.cert）"></a>生成 PEM （regis.myharbor.com.cert）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">openssl x509 -inform PEM -in regis.myharbor.com.crt -out regis.myharbor.com.cert</span><br></pre></td></tr></table></figure><h3 id="创建文件夹-将服务器证书、密钥和-CA-文件复制过去"><a href="#创建文件夹-将服务器证书、密钥和-CA-文件复制过去" class="headerlink" title="创建文件夹,将服务器证书、密钥和 CA 文件复制过去"></a>创建文件夹,将服务器证书、密钥和 CA 文件复制过去</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mkdir -p &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;regis.myharbor.com</span><br><span class="line"></span><br><span class="line"># cp regis.myharbor.com.cert &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;regis.myharbor.com</span><br><span class="line"># cp regis.myharbor.com.key &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;regis.myharbor.com</span><br><span class="line"># cp ca.crt &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;regis.myharbor.com</span><br></pre></td></tr></table></figure><h2 id="由于habor未配置https，还需要在docker配置可信任-（192-168-153-105）"><a href="#由于habor未配置https，还需要在docker配置可信任-（192-168-153-105）" class="headerlink" title="由于habor未配置https，还需要在docker配置可信任 （192.168.153.105）"></a>由于habor未配置https，还需要在docker配置可信任 （192.168.153.105）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;<span class="string">&quot;registry-mirrors&quot;</span>: [<span class="string">&quot;https://6ze43vnb.mirror.aliyuncs.com&quot;</span>],</span><br><span class="line">  <span class="string">&quot;insecure-registries&quot;</span>: [<span class="string">&quot;192.168.153.105&quot;</span>]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker</span></span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="修改harbor相关配置，启动harbor"><a href="#修改harbor相关配置，启动harbor" class="headerlink" title="修改harbor相关配置，启动harbor"></a>修改harbor相关配置，启动harbor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># cd &#x2F;usr&#x2F;local&#x2F;harbor</span><br><span class="line"></span><br><span class="line"># vim harbor.yml</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: &#x2F;usr&#x2F;local&#x2F;harbor&#x2F;ssl&#x2F;regis.myharbor.com.cert</span><br><span class="line">  private_key: &#x2F;usr&#x2F;local&#x2F;harbor&#x2F;ssl&#x2F;regis.myharbor.com.key</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># .&#x2F;prepare</span><br><span class="line"></span><br><span class="line"># .&#x2F;install.sh</span><br></pre></td></tr></table></figure><h3 id="写入hosts-文件中"><a href="#写入hosts-文件中" class="headerlink" title="写入hosts 文件中"></a>写入hosts 文件中</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;192.168.153.105 regis.myharbor.com&quot; &gt;&gt; &#x2F;etc&#x2F;hosts</span><br></pre></td></tr></table></figure><h3 id="服务器中访问-用户名-admin-密码-Harbor12345"><a href="#服务器中访问-用户名-admin-密码-Harbor12345" class="headerlink" title="服务器中访问 (用户名 admin 密码 Harbor12345)"></a>服务器中访问 (用户名 admin 密码 Harbor12345)</h3><p><img src="http://static.zybuluo.com/sjl--3306/ywrq7z6klfocj1sccwkym0ky/image_1ev7fcjk91bqgt851lj01guvnmb9.png" alt="image_1ev7fcjk91bqgt851lj01guvnmb9.png-78.7kB"></p><h3 id="windows-浏览器中访问"><a href="#windows-浏览器中访问" class="headerlink" title="windows 浏览器中访问"></a>windows 浏览器中访问</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改 C:\Windows\System32\drivers\etc\hosts 文件</span><br><span class="line">加入 192.168.153.105 regis.myharbor.com 一行</span><br></pre></td></tr></table></figure><p>浏览器访问<br><img src="http://static.zybuluo.com/sjl--3306/mvvk213iho6rjisbe0y0umid/image_1ev7fk11d1djk12mm194kle9hgjm.png" alt="image_1ev7fk11d1djk12mm194kle9hgjm.png-99.5kB"><br><img src="http://static.zybuluo.com/sjl--3306/t07ih5bv77jebv8ad6y29iya/image_1ev7fkm00jp2lku1i0mmtmoq013.png" alt="image_1ev7fkm00jp2lku1i0mmtmoq013.png-109.7kB"><br>用户名 admin 密码 Harbor12345<br><img src="http://static.zybuluo.com/sjl--3306/gp0fnjy4l9u35i20if39c2ft/image_1ev7fm6n127v1gq11t6k19ps1jcg1g.png" alt="image_1ev7fm6n127v1gq11t6k19ps1jcg1g.png-113.4kB"></p><h2 id="提交镜像到镜像仓库"><a href="#提交镜像到镜像仓库" class="headerlink" title="提交镜像到镜像仓库"></a>提交镜像到镜像仓库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取镜像</span></span><br><span class="line"><span class="comment"># docker pull busybox</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">[root@k8s-master ~]<span class="comment"># docker image ls</span></span><br><span class="line">REPOSITORY                                                                       TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给镜像打包</span></span><br><span class="line">docker tag busybox:latest regis.myharbor.com/library/busybox:latest</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看镜像</span></span><br><span class="line">docker image ls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传镜像到docker harbor上</span></span><br><span class="line">docker push regis.myharbor.com/library/busybox:latest</span><br></pre></td></tr></table></figure><h2 id="最后效果"><a href="#最后效果" class="headerlink" title="最后效果"></a>最后效果</h2><p><img src="http://static.zybuluo.com/sjl--3306/69xtfvnimdfzqttr71rjkg0s/image_1ev7fuh261sf91pgh2i9185911v01t.png" alt="image_1ev7fuh261sf91pgh2i9185911v01t.png-110kB"><br><img src="http://static.zybuluo.com/sjl--3306/vxjw010vxzj0e663uby1r3dy/image_1ev7fv5nk1af91iu81d8s1cgni132a.png" alt="image_1ev7fv5nk1af91iu81d8s1cgni132a.png-117.7kB"><br><img src="http://static.zybuluo.com/sjl--3306/0ro18ckpe1cqzuhtafw1unv7/image_1ev7fvh9s6i5dl21j6l15nr1ehj2n.png" alt="image_1ev7fvh9s6i5dl21j6l15nr1ehj2n.png-111.8kB"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>k8s文档</title>
      <link href="2021/01/31/k8s%E6%96%87%E6%A1%A3/"/>
      <url>2021/01/31/k8s%E6%96%87%E6%A1%A3/</url>
      
        <content type="html"><![CDATA[<h2 id="k8s的安装"><a href="#k8s的安装" class="headerlink" title="k8s的安装"></a>k8s的安装</h2><h3 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">三台主机</span><br><span class="line">IP:  192.168.153.50     主机名：master    系统： centos 7.6      配置： 2C 2G</span><br><span class="line">IP:  192.168.153.51     主机名：node1     系统： centos 7.6      配置： 2C 2G</span><br><span class="line">IP:  192.168.153.52     主机名：node2     系统： centos 7.6      配置： 2C 2G</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">三台主机全部关闭防火墙:</span><br><span class="line"># systemctl stop firewalld</span><br><span class="line"># systemctl disable firewalld</span><br><span class="line"></span><br><span class="line">三台主机全部关闭selinux：</span><br><span class="line"># sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config</span><br><span class="line"># setenforce 0</span><br><span class="line"></span><br><span class="line">三台主机全部关闭swap：</span><br><span class="line"># swapoff -a  # 临时关闭</span><br><span class="line"># vim &#x2F;etc&#x2F;fstab 注释到swap那一行 # 永久关闭</span><br><span class="line"></span><br><span class="line">添加主机名与IP对应关系(三台主机都执行)：</span><br><span class="line"># cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF</span><br><span class="line">192.168.153.50 master</span><br><span class="line">192.168.153.51 node1</span><br><span class="line">192.168.153.52 node2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">设置 192.168.153.50主机主机名</span><br><span class="line"># hostnamectl set-hostname master</span><br><span class="line"></span><br><span class="line">设置 192.168.153.51主机主机名</span><br><span class="line"># hostnamectl set-hostname node1</span><br><span class="line"></span><br><span class="line">设置 192.168.153.52主机主机名</span><br><span class="line"># hostnamectl set-hostname node2</span><br><span class="line"></span><br><span class="line">将桥接的IPv4流量传递到iptables的链(三台主机都执行)：</span><br><span class="line"># cat &gt; &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class="line">EOF</span><br><span class="line"># sysctl --system</span><br></pre></td></tr></table></figure><h3 id="所有节点安装Docker-kubeadm-kubelet"><a href="#所有节点安装Docker-kubeadm-kubelet" class="headerlink" title="所有节点安装Docker/kubeadm/kubelet"></a>所有节点安装Docker/kubeadm/kubelet</h3><p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><p>每台机器上安装Docker，建议使用18.09版本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">下载阿里云的docker yum源,并安装</span><br><span class="line"># wget https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo -O &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo</span><br><span class="line"># yum -y install docker-ce-18.09.9-3.el7</span><br><span class="line"></span><br><span class="line">启动docker,并设置docker开机自启</span><br><span class="line"># systemctl start docker</span><br><span class="line"># systemctl enable docker</span><br></pre></td></tr></table></figure><h4 id="镜像下载加速"><a href="#镜像下载加速" class="headerlink" title="镜像下载加速"></a>镜像下载加速</h4><p>进入到阿里云后台控制界面<br><img src="http://static.zybuluo.com/sjl--3306/eh25kqk5xazgk0fke8117e8c/image_1etm2khbmad01i6ula51e79gcjm.png" alt="image_1etm2khbmad01i6ula51e79gcjm.png-306.5kB"></p><p>点击产品与服务,选择容器镜像服务<br><img src="http://static.zybuluo.com/sjl--3306/cir37x23kk66t75kjun1dwwm/image_1etm2lpsp1nvn7jb14co9te1i6h13.png" alt="image_1etm2lpsp1nvn7jb14co9te1i6h13.png-290.2kB"></p><p>左下角有个镜像加速器<br><img src="http://static.zybuluo.com/sjl--3306/1wwve1m0al9iwinuqrtxlbez/image_1e2krfndu1g191sag2tb1uu64q1g.png" alt="image_1e2krfndu1g191sag2tb1uu64q1g.png-86.4kB"></p><p>选择自己的加速器地址，修改就行了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># cat &gt;  &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;6ze43vnb.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>设置cgroup驱动，推荐systemd：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;6ze43vnb.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>重启docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="添加阿里云YUM软件源"><a href="#添加阿里云YUM软件源" class="headerlink" title="添加阿里云YUM软件源"></a>添加阿里云YUM软件源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name&#x3D;Kubernetes</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">repo_gpgcheck&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h3 id="安装kubeadm，kubelet和kubectl"><a href="#安装kubeadm，kubelet和kubectl" class="headerlink" title="安装kubeadm，kubelet和kubectl"></a>安装kubeadm，kubelet和kubectl</h3><p>由于版本更新频繁，这里指定版本号部署：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y kubelet-1.16.0 kubeadm-1.16.0 kubectl-1.16.0</span><br><span class="line"># systemctl enable kubelet</span><br></pre></td></tr></table></figure><h3 id="部署Kubernetes-Master"><a href="#部署Kubernetes-Master" class="headerlink" title="部署Kubernetes Master"></a>部署Kubernetes Master</h3><p>在192.168.153.50（Master）执行。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># kubeadm init \</span><br><span class="line">  --apiserver-advertise-address&#x3D;192.168.153.50 \</span><br><span class="line">  --image-repository registry.aliyuncs.com&#x2F;google_containers \</span><br><span class="line">  --kubernetes-version v1.16.0 \</span><br><span class="line">  --service-cidr&#x3D;10.1.0.0&#x2F;16 \</span><br><span class="line">  --pod-network-cidr&#x3D;10.244.0.0&#x2F;16</span><br></pre></td></tr></table></figure><p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址</p><p>执行完,出现如图所示<br><img src="http://static.zybuluo.com/sjl--3306/df4qzms8bgm1nsuoe520nqj9/image_1e2ku14lmdvd4n16i49uf1nr29.png" alt="image_1e2ku14lmdvd4n16i49uf1nr29.png-136.5kB"></p><p>使用kubectl工具(192.168.153.50执行)：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME&#x2F;.kube</span><br><span class="line">sudo cp -i &#x2F;etc&#x2F;kubernetes&#x2F;admin.conf $HOME&#x2F;.kube&#x2F;config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME&#x2F;.kube&#x2F;config</span><br></pre></td></tr></table></figure><h3 id="加入Kubernetes-Node"><a href="#加入Kubernetes-Node" class="headerlink" title="加入Kubernetes Node"></a>加入Kubernetes Node</h3><p>在192.168.153.51/52（Node）分别执行。</p><p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join一行是master端 kubeadm init 生成的,实际你的会变化</span><br><span class="line"># kubeadm join 192.168.153.50:6443 --token 6qf11n.pdyzp2zki1ydb2fc \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:e9055d8b3cfcf40330124f5da18e820ebcb6eb9ff28eb64c0f593e0fb154b755</span><br></pre></td></tr></table></figure><h3 id="安装Pod网络插件（CNI）"><a href="#安装Pod网络插件（CNI）" class="headerlink" title="安装Pod网络插件（CNI）"></a>安装Pod网络插件（CNI）</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f kube-flannel.yml</span><br><span class="line"># kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure><h3 id="创建案例，进行测试"><a href="#创建案例，进行测试" class="headerlink" title="创建案例，进行测试"></a>创建案例，进行测试</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">创建一个deployment</span><br><span class="line">#  kubectl create deployment web01 --image&#x3D;nginx</span><br><span class="line"></span><br><span class="line">创建一个svc</span><br><span class="line">#  kubectl expose deployment web01 --port&#x3D;8001 --target-port&#x3D;80 --type&#x3D;NodePort --name&#x3D;web01</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看结果</span><br><span class="line"># kubectl get pods |grep web01</span><br><span class="line"># kubectl get svc  |grep web01</span><br></pre></td></tr></table></figure><h3 id="部署-Dashboard"><a href="#部署-Dashboard" class="headerlink" title="部署 Dashboard"></a>部署 Dashboard</h3><p>官方网址：<a href="https://github.com/kubernetes/dashboard">https://github.com/kubernetes/dashboard</a><br>提前下载这个文件 <a href="https://raw.githubusercontent.com/kubernetes/dashboard/v2.1.0/aio/deploy/recommended.yaml">recommended.yaml</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># mv recommended.yaml kubernetes-dashboard.yaml</span><br><span class="line"># vim  kubernetes-dashboard.yaml，加入3行文件</span><br><span class="line">      protocol: TCP</span><br><span class="line">      nodePort: 30001</span><br><span class="line">  type: NodePort</span><br></pre></td></tr></table></figure><p>效果<br><img src="http://static.zybuluo.com/sjl--3306/zxk8puyqmkf8qt5u8eg5pxpg/image_1etclh23k1g6aorr15f41mql1r1f9.png" alt="image_1etclh23k1g6aorr15f41mql1r1f9.png-134.2kB"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f kubernetes-dashboard.yaml</span><br><span class="line"># kubectl get pods -n kubernetes-dashboard</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://nodeip:30001/">http://NodeIP:30001</a></p><p>创建service account并绑定默认cluster-admin管理员集群角色：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl create serviceaccount dashboard-admin -n kubernetes-dashboard</span><br><span class="line"># kubectl create clusterrolebinding dashboard-admin --clusterrole&#x3D;cluster-admin --serviceaccount&#x3D;kubernetes-dashboard:dashboard-admin</span><br><span class="line"># kubectl describe secrets -n kubernetes-dashboard $(kubectl -n kubernetes-dashboard get secret | awk &#39;&#x2F;dashboard-admin&#x2F;&#123;print $1&#125;&#39;)</span><br></pre></td></tr></table></figure><p>访问： <a href="https://192.168.153.50:30001/">https://192.168.153.50:30001</a><br>使用输出的token登录Dashboard。<br>最后的UI界面<br><img src="http://static.zybuluo.com/sjl--3306/mktkwzpvkhnobcu5xr71l847/image_1et9utn071lop13fb1fkk1i8hftr9.png" alt="image_1et9utn071lop13fb1fkk1i8hftr9.png-145.8kB"></p><hr><h2 id="k8s-部署-metrics-server"><a href="#k8s-部署-metrics-server" class="headerlink" title="k8s 部署 metrics-server"></a>k8s 部署 metrics-server</h2><p>提前下载这个文件 <a href="kubectl%20apply%20-f%20https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml">components.yaml</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># mv components.yaml metrics-server.yaml</span><br><span class="line"># vim metrics-server.yaml</span><br><span class="line">image: k8s.gcr.io&#x2F;metrics-server&#x2F;metrics-server:v0.4.1 换成国内的</span><br><span class="line">这是我地址： image: shujiangle&#x2F;metrics-server:v0.4.1</span><br><span class="line"></span><br><span class="line">把 - args 的两行 kubelet删除，加入三行文件</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/sjl--3306/rfbddswqw0s7nz2j0kj43el8/image_1etcodj0o1m6v19to1op81eaj1m4mm.png" alt="image_1etcodj0o1m6v19to1op81eaj1m4mm.png-86.3kB"><br><img src="http://static.zybuluo.com/sjl--3306/sibh1d0qqhjamwbyyd7g9gaq/image_1etcogal2a1u1bbgtt0ljn1kga13.png" alt="image_1etcogal2a1u1bbgtt0ljn1kga13.png-73.1kB"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># kubectl apply -f metrics-server.yaml</span><br><span class="line"># kubectl get pods -A|grep  metrics-server</span><br><span class="line">kube-system   metrics-server-85fb8dd874-wrx8w           1&#x2F;1     Running   0          5m37s</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/sjl--3306/vxu6dv0170nskzbf5ato6szl/image_1etcomqcd1pop15s0m4k1ca5q3i1g.png" alt="image_1etcomqcd1pop15s0m4k1ca5q3i1g.png-244.2kB"></p><h2 id="k8s常用的命令"><a href="#k8s常用的命令" class="headerlink" title="k8s常用的命令"></a>k8s常用的命令</h2><p><code>kubectl</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">1、创建</span><br><span class="line"># kubectl create deployment web --image&#x3D;lizhenliang&#x2F;java-demo</span><br><span class="line"># kubectl get deploy,pods</span><br><span class="line"></span><br><span class="line">2、发布</span><br><span class="line"># kubectl expose deployment web --port&#x3D;80 --type&#x3D;NodePort --target-port&#x3D;80 --name&#x3D;web</span><br><span class="line"># kubectl get service</span><br><span class="line"></span><br><span class="line">3、升级</span><br><span class="line"># kubectl set image deployment&#x2F;web nginx&#x3D;nginx:1.15</span><br><span class="line"></span><br><span class="line">4 查看升级状态</span><br><span class="line"># kubectl rollout status deployment&#x2F;nginx-deployment</span><br><span class="line"></span><br><span class="line">4、回滚</span><br><span class="line"># kubectl rollout history deployment&#x2F;web</span><br><span class="line"># kubectl rollout undo deployment&#x2F;web</span><br><span class="line"># kubectl rollout undo deployment&#x2F;web --revision&#x3D;2</span><br><span class="line"></span><br><span class="line">5、删除</span><br><span class="line"># kubectl delete deploy&#x2F;web</span><br><span class="line"># kubectl delete svc&#x2F;web</span><br><span class="line"></span><br><span class="line">6. 对某个node进行隔离调度和恢复调度</span><br><span class="line"># kubectl cordon node2</span><br><span class="line"># kubectl uncordon node2</span><br></pre></td></tr></table></figure><hr><h2 id="kubernetes-证书更新"><a href="#kubernetes-证书更新" class="headerlink" title="kubernetes 证书更新"></a>kubernetes 证书更新</h2><h3 id="查看证书有效期"><a href="#查看证书有效期" class="headerlink" title="查看证书有效期"></a>查看证书有效期</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubeadm alpha certs check-expiration</span><br></pre></td></tr></table></figure><h3 id="备份证书"><a href="#备份证书" class="headerlink" title="备份证书"></a>备份证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># cp -rp &#x2F;etc&#x2F;kubernetes &#x2F;etc&#x2F;kubernetes.bak</span><br></pre></td></tr></table></figure><h3 id="更新证书"><a href="#更新证书" class="headerlink" title="更新证书"></a>更新证书</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># kubeadm alpha certs renew all</span><br></pre></td></tr></table></figure><hr><h2 id="kubernetes-新增node节点"><a href="#kubernetes-新增node节点" class="headerlink" title="kubernetes 新增node节点"></a>kubernetes 新增node节点</h2><h3 id="master端执行"><a href="#master端执行" class="headerlink" title="master端执行"></a>master端执行</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubeadm token list</span><br><span class="line">TOKEN                     TTL       EXPIRES                     USAGES                   DESCRIPTION   EXTRA GROUPS</span><br><span class="line">nih4fv.mys97k5ozjkm1nkk   22h       2020-03-10T14:54:32+08:00   authentication,signing   &lt;none&gt;        system:bootstrappers:kubeadm:default-node-token</span><br><span class="line"></span><br><span class="line">[root@master ~]# kubeadm token create &amp;&amp; kubeadm token list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># openssl x509 -pubkey -in &#x2F;etc&#x2F;kubernetes&#x2F;pki&#x2F;ca.crt | openssl rsa -pubin -outform der 2&gt;&#x2F;dev&#x2F;null | openssl dgst -sha256 -hex | sed &#39;s&#x2F;^.* &#x2F;&#x2F;&#39;</span><br><span class="line"></span><br><span class="line">604e2a4161b05050b5bf75583b0a7b8d9944e0d338eac20b869bcae1e82ecac5</span><br></pre></td></tr></table></figure><h3 id="新增node节点ip和主机名到hosts-master"><a href="#新增node节点ip和主机名到hosts-master" class="headerlink" title="新增node节点ip和主机名到hosts (master)"></a>新增node节点ip和主机名到hosts (master)</h3><p><code>echo &quot;192.168.153.53 node3&quot; &gt;&gt; /etc/hosts</code></p><h3 id="node端执行"><a href="#node端执行" class="headerlink" title="node端执行"></a>node端执行</h3><h4 id="主机关闭防火墙selinux-和swap"><a href="#主机关闭防火墙selinux-和swap" class="headerlink" title="主机关闭防火墙selinux 和swap:"></a>主机关闭防火墙selinux 和swap:</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># systemctl stop firewalld</span><br><span class="line"># systemctl disable firewalld</span><br><span class="line">主机关闭selinux：</span><br><span class="line"># sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config</span><br><span class="line"># setenforce 0</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">主机关闭swap：</span><br><span class="line"># swapoff -a  # 临时关闭</span><br><span class="line"># vim &#x2F;etc&#x2F;fstab 注释到swap那一行 # 永久关闭</span><br><span class="line"></span><br><span class="line">将桥接的IPv4流量传递到iptables的链(三台主机都执行)：</span><br><span class="line"># cat &gt; &#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables &#x3D; 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class="line">EOF</span><br><span class="line"># sysctl --system</span><br></pre></td></tr></table></figure><h4 id="主机安装Docker-kubeadm-kubelet"><a href="#主机安装Docker-kubeadm-kubelet" class="headerlink" title="主机安装Docker/kubeadm/kubelet"></a>主机安装Docker/kubeadm/kubelet</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">下载阿里云的docker yum源,并安装</span><br><span class="line"># wget https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo -O &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo</span><br><span class="line"># yum -y install docker-ce-18.09.9-3.el7</span><br><span class="line">启动docker,并设置docker开机自启</span><br><span class="line"># systemctl start docker</span><br><span class="line"># systemctl enable docker</span><br></pre></td></tr></table></figure><h4 id="设置cgroup驱动和镜像加速，推荐systemd："><a href="#设置cgroup驱动和镜像加速，推荐systemd：" class="headerlink" title="设置cgroup驱动和镜像加速，推荐systemd："></a>设置cgroup驱动和镜像加速，推荐systemd：</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;6ze43vnb.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver&#x3D;systemd&quot;],</span><br><span class="line">  &quot;log-driver&quot;: &quot;json-file&quot;,</span><br><span class="line">  &quot;log-opts&quot;: &#123;</span><br><span class="line">    &quot;max-size&quot;: &quot;100m&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;storage-driver&quot;: &quot;overlay2&quot;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="重启docker"><a href="#重启docker" class="headerlink" title="重启docker"></a>重启docker</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><h4 id="添加阿里云YUM软件源-1"><a href="#添加阿里云YUM软件源-1" class="headerlink" title="添加阿里云YUM软件源"></a>添加阿里云YUM软件源</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># cat &gt; &#x2F;etc&#x2F;yum.repos.d&#x2F;kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name&#x3D;Kubernetes</span><br><span class="line">baseurl&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;repos&#x2F;kubernetes-el7-x86_64</span><br><span class="line">enabled&#x3D;1</span><br><span class="line">gpgcheck&#x3D;0</span><br><span class="line">repo_gpgcheck&#x3D;0</span><br><span class="line">gpgkey&#x3D;https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;yum-key.gpg https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;kubernetes&#x2F;yum&#x2F;doc&#x2F;rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="安装kubeadm，kubelet和kubectl-1"><a href="#安装kubeadm，kubelet和kubectl-1" class="headerlink" title="安装kubeadm，kubelet和kubectl"></a>安装kubeadm，kubelet和kubectl</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># yum install -y kubelet-1.16.0 kubeadm-1.16.0 kubectl-1.16.0</span><br><span class="line"># systemctl enable kubelet</span><br></pre></td></tr></table></figure><h4 id="将node3节点加入集群"><a href="#将node3节点加入集群" class="headerlink" title="将node3节点加入集群"></a>将node3节点加入集群</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 192.168.153.50:6443 --token ak0mcr.lvmyq9svm18xv59h --discovery-token-ca-cert-hash sha256:604e2a4161b05050b5bf75583b0a7b8d9944e0d338eac20b869bcae1e82ecac5</span><br></pre></td></tr></table></figure><hr><h2 id="kubernetes-删除node节点-例如删除k8s-node3节点"><a href="#kubernetes-删除node节点-例如删除k8s-node3节点" class="headerlink" title="kubernetes 删除node节点(例如删除k8s-node3节点)"></a>kubernetes 删除node节点(例如删除k8s-node3节点)</h2><h3 id="master端执行-1"><a href="#master端执行-1" class="headerlink" title="master端执行"></a>master端执行</h3><h4 id="查看查看所有的节点状态"><a href="#查看查看所有的节点状态" class="headerlink" title="查看查看所有的节点状态"></a>查看查看所有的节点状态</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl get nodes</span><br><span class="line">NAME         STATUS   ROLES    AGE    VERSION</span><br><span class="line">master   Ready    master   118d   v1.16.0</span><br><span class="line">node1    Ready    &lt;none&gt;   118d   v1.16.0</span><br><span class="line">node2    Ready    &lt;none&gt;   118d   v1.16.0</span><br></pre></td></tr></table></figure><h4 id="删除一个节点"><a href="#删除一个节点" class="headerlink" title="删除一个节点"></a>删除一个节点</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@master ~]# kubectl delete nodes node3</span><br><span class="line">node &quot;node3&quot; deleted</span><br></pre></td></tr></table></figure><h3 id="node端执行-1"><a href="#node端执行-1" class="headerlink" title="node端执行"></a>node端执行</h3><h3 id="重置node节点"><a href="#重置node节点" class="headerlink" title="重置node节点"></a>重置node节点</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@k8s-node3 ~]# kubeadm reset</span><br><span class="line">按y重置该节点</span><br></pre></td></tr></table></figure><hr><h2 id="docker镜像的制作"><a href="#docker镜像的制作" class="headerlink" title="docker镜像的制作"></a>docker镜像的制作</h2><h3 id="web项目的构建"><a href="#web项目的构建" class="headerlink" title="web项目的构建"></a>web项目的构建</h3><p>项目地址：<a href="https://github.com/shujiangle/myadmin-lite-master">https://github.com/shujiangle/myadmin-lite-master</a></p><h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">FROM nginx:1.15.7-alpine</span><br><span class="line"></span><br><span class="line">RUN mkdir -p &#x2F;data&#x2F;myadmin-lite-master</span><br><span class="line"></span><br><span class="line">WORKDIR &#x2F;root</span><br><span class="line"></span><br><span class="line">COPY .&#x2F; &#x2F;data&#x2F;myadmin-lite-master</span><br><span class="line"></span><br><span class="line">EXPOSE 80</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RUN  cp &#x2F;data&#x2F;myadmin-lite-master&#x2F;nginx.conf &#x2F;etc&#x2F;nginx&#x2F;nginx.conf</span><br><span class="line">RUN &#x2F;bin&#x2F;cp &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime</span><br><span class="line">RUN echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RUN echo &#39;&#x2F;usr&#x2F;sbin&#x2F;nginx -g &quot;daemon off;&quot;&#39; &gt; &#x2F;root&#x2F;uwsgi.sh</span><br><span class="line">CMD sh &#x2F;root&#x2F;uwsgi.sh</span><br></pre></td></tr></table></figure><h4 id="deploy-yaml"><a href="#deploy-yaml" class="headerlink" title="deploy.yaml"></a>deploy.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myadminlite</span><br><span class="line">  name: myadminlite</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myadminlite</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myadminlite</span><br><span class="line">    spec:</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">        - name: docker-harbor-registry</span><br><span class="line">      containers:</span><br><span class="line">      - image: 192.168.153.102&#x2F;myweb&#x2F;myadmin-lite-prod:__VERSION__</span><br><span class="line">        name: nginx</span><br><span class="line">        resources: &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myadminlite</span><br><span class="line">  name: myadminlite</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 8010</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: myadminlite</span><br><span class="line">  type: NodePort</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="java项目的构建"><a href="#java项目的构建" class="headerlink" title="java项目的构建"></a>java项目的构建</h3><p>项目地址：<a href="https://github.com/shujiangle/tomcat-java-demo">https://github.com/shujiangle/tomcat-java-demo</a></p><h4 id="Dockerfile-（tomcat）"><a href="#Dockerfile-（tomcat）" class="headerlink" title="Dockerfile （tomcat）"></a>Dockerfile （tomcat）</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">FROM maven:3.6.0-jdk-8-alpine  as maventools</span><br><span class="line">RUN rm -rf &#x2F;usr&#x2F;share&#x2F;maven&#x2F;conf&#x2F;settings.xml</span><br><span class="line">COPY settings.xml &#x2F;usr&#x2F;share&#x2F;maven&#x2F;conf&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WORKDIR &#x2F;root</span><br><span class="line">COPY . &#x2F;root</span><br><span class="line">RUN cd &#x2F;root &amp;&amp; mvn clean install -Dmaven.test.skip&#x3D;true -Dmaven.javadoc.skip&#x3D;true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FROM tomcat</span><br><span class="line">LABEL maintainer www.ctnrs.com</span><br><span class="line"></span><br><span class="line">EXPOSE 8080</span><br><span class="line">RUN rm -rf &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;*</span><br><span class="line">COPY --from&#x3D;maventools &#x2F;root&#x2F;target&#x2F;*.war &#x2F;usr&#x2F;local&#x2F;tomcat&#x2F;webapps&#x2F;ROOT.war</span><br></pre></td></tr></table></figure><h4 id="deploy-yaml-1"><a href="#deploy-yaml-1" class="headerlink" title="deploy.yaml"></a>deploy.yaml</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">apiVersion: apps&#x2F;v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: tomcatjavademo</span><br><span class="line">  name: tomcatjavademo</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: tomcatjavademo</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: tomcatjavademo</span><br><span class="line">    spec:</span><br><span class="line">      imagePullSecrets:</span><br><span class="line">        - name: docker-harbor-registry</span><br><span class="line">      containers:</span><br><span class="line">      - image: 192.168.153.102&#x2F;myweb&#x2F;tomcat-java-demoprod:__VERSION__</span><br><span class="line">        name: nginx</span><br><span class="line">        resources: &#123;&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: tomcatjavademo</span><br><span class="line">  name: tomcatjavademo</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - port: 8080</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 8080</span><br><span class="line"></span><br><span class="line">  selector:</span><br><span class="line">    app: tomcatjavademo</span><br><span class="line">  type: NodePort</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="Dockerfile-1"><a href="#Dockerfile-1" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">FROM maven:3.6.0-jdk-8-alpine  as maventools</span><br><span class="line">RUN rm -rf &#x2F;usr&#x2F;share&#x2F;maven&#x2F;conf&#x2F;settings.xml</span><br><span class="line">COPY settings.xml &#x2F;usr&#x2F;share&#x2F;maven&#x2F;conf&#x2F;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">WORKDIR &#x2F;root</span><br><span class="line">COPY . &#x2F;root</span><br><span class="line">RUN cd &#x2F;root &amp;&amp; mvn clean install -Dmaven.test.skip&#x3D;true -Dmaven.javadoc.skip&#x3D;true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">FROM openjdk:8</span><br><span class="line">RUN mkdir &#x2F;app</span><br><span class="line">RUN rm -rf &#x2F;etc&#x2F;localtime &amp;&amp; ln -s &#x2F;usr&#x2F;share&#x2F;zoneinfo&#x2F;Asia&#x2F;Shanghai &#x2F;etc&#x2F;localtime</span><br><span class="line">RUN echo &quot;Asia&#x2F;Shanghai&quot; &gt; &#x2F;etc&#x2F;timezone</span><br><span class="line">COPY --from&#x3D;maventools &#x2F;root&#x2F;target&#x2F;*.jar &#x2F;app</span><br><span class="line">CMD java  -jar &#x2F;app&#x2F;xunwc.jar</span><br></pre></td></tr></table></figure><h3 id="pipeline"><a href="#pipeline" class="headerlink" title="pipeline"></a>pipeline</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">def APP_ENV &#x3D; &quot;prod&quot;</span><br><span class="line">def APP_NAME &#x3D; &quot;tomcat-java-demo&quot;</span><br><span class="line">def APP_VERSION &#x3D; &quot;$branch&quot;</span><br><span class="line">pipeline &#123;</span><br><span class="line">   agent any</span><br><span class="line">   options &#123;</span><br><span class="line">       timestamps()</span><br><span class="line">       skipDefaultCheckout()</span><br><span class="line">       disableConcurrentBuilds()</span><br><span class="line">       timeout(time:1,unit:&#39;HOURS&#39;)</span><br><span class="line">   &#125;</span><br><span class="line">stages &#123;</span><br><span class="line"></span><br><span class="line">        stage(&#39;Checkout&#39;) &#123;</span><br><span class="line">            steps &#123;</span><br><span class="line">              script</span><br><span class="line">              &#123;</span><br><span class="line">              IMG_URL &#x3D; &quot;192.168.153.102&#x2F;myweb&#x2F;$&#123;APP_NAME&#125;$&#123;APP_ENV&#125;:$branch&quot;</span><br><span class="line">            checkout([$class: &#39;GitSCM&#39;, branches: [[name: &#39;$branch&#39;]], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: &#39;6f1f6a3f-4644-4058-a3b8-cc593e54f5d6&#39;, url: &#39;http:&#x2F;&#x2F;192.168.153.102:9999&#x2F;root&#x2F;tomcat-java-demo.git&#39;]]])</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        stage(&#39;Building&#39;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">              sh &quot;docker build -t $&#123;IMG_URL&#125; -f Dockerfile .&#x2F;&quot;</span><br><span class="line">              sh &quot;docker login -uadmin -pHarbor12345 192.168.153.102&quot;</span><br><span class="line">              sh &quot;docker push $&#123;IMG_URL&#125;&quot;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">              stage(&#39;Configuring&#39;) &#123;</span><br><span class="line">                steps &#123;</span><br><span class="line">                    sh &quot;&quot;&quot;</span><br><span class="line">                        sed -i &quot;s&#x2F;__VERSION__&#x2F;$&#123;APP_VERSION&#125;&#x2F;&quot; deploy.yaml</span><br><span class="line">                        more deploy.yaml</span><br><span class="line">                    &quot;&quot;&quot;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              stage(&#39;Deployment&#39;) &#123;</span><br><span class="line">                steps &#123;</span><br><span class="line">                    sh &#39;&#39;&#39;</span><br><span class="line">                        if kubectl  apply -f deploy.yaml | grep -c unchanged &gt; 0; then</span><br><span class="line">                            echo &quot;&#x3D;&gt; Patching deployment to force image update.&quot;</span><br><span class="line">                            kubectl patch -f deploy.yaml -p &#39;&#123;&quot;spec&quot;:&#123;&quot;template&quot;:&#123;&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&quot;ci-last-updated&quot;:&quot;&#39;$(date +&#39;%s&#39;)&#39;&quot;&#125;&#125;&#125;&#125;&#125;&#39;</span><br><span class="line"></span><br><span class="line">                        else</span><br><span class="line">                            echo &quot;&#x3D;&gt; Deployment apply has changed the object, no need to force image update.&quot;</span><br><span class="line">                        fi</span><br><span class="line">                    &#39;&#39;&#39;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="harbor-登录出现401-Unauthorized"><a href="#harbor-登录出现401-Unauthorized" class="headerlink" title="harbor 登录出现401 Unauthorized"></a>harbor 登录出现401 Unauthorized</h2><p><img src="http://static.zybuluo.com/sjl--3306/reaz5m2z6bo6bp5h7wft2pdd/image_1etm2ucfqj3mhck1e8e1ccm11at1g.png" alt="image_1etm2ucfqj3mhck1e8e1ccm11at1g.png-120.8kB"></p><h3 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">进入你自己harbor目录</span><br><span class="line"># cd &#x2F;usr&#x2F;local&#x2F;harbor</span><br><span class="line"></span><br><span class="line">停止相关容器</span><br><span class="line"># docker-compose stop</span><br><span class="line"></span><br><span class="line">移除相关容器</span><br><span class="line"># docker-compose down</span><br><span class="line"></span><br><span class="line">重新拉取相关容器</span><br><span class="line"># docker-compose up -d</span><br></pre></td></tr></table></figure><p>效果：<br><img src="http://static.zybuluo.com/sjl--3306/a1vxpm86j4ymoqxaeqjv321k/image_1etm3a6km1vvb1ev91ek61va5ar41t.png" alt="image_1etm3a6km1vvb1ev91ek61va5ar41t.png-120.9kB"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jenkins pipline语法</title>
      <link href="2021/01/28/jenkins-pipline%E8%AF%AD%E6%B3%95/"/>
      <url>2021/01/28/jenkins-pipline%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="最基本一个jenkins-文件"><a href="#最基本一个jenkins-文件" class="headerlink" title="最基本一个jenkins 文件"></a>最基本一个jenkins 文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line"></span><br><span class="line">    agent any</span><br><span class="line">    stage &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          step &#123;</span><br><span class="line"></span><br><span class="line">     &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>jenkins 文件，第一件事情将 jenkins 文件写为  脚本管道 Scripted 或者 声明性管道 Declarative</p><p>jenkins 文件的第一种语法，所以基本是允许写的 ，jenkins 文件的整体配置使用groovy 脚本，因此唯一</p><p>Script所拥有的结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node &#123;</span><br><span class="line">    &#x2F;&#x2F; groovy script</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>groovy 脚本，你可以在此处灵活地编写整个配置，你想要的方式，因此那里没有预定义的结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line"></span><br><span class="line">    agent any</span><br><span class="line">    stage &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line"></span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       stage(&quot;test&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line"></span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       stage(&quot;deploy&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line"></span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你正在构建javascript应用程序，则所有NPM都将安装NPM</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">stage(&quot;build&quot;) &#123;</span><br><span class="line">   step &#123;</span><br><span class="line">      sh &#39;npm install&#39;</span><br><span class="line">      sh &#39;npm build&#39;</span><br><span class="line">&#125;        </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>基本的应用程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line"></span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">         echo &#39;building the application&#39;</span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       stage(&quot;test&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">         echo &#39;testing the application&#39;   </span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       stage(&quot;deploy&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">         echo &#39;deploying the application&#39;</span><br><span class="line">      &#125;        </span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>你可以使用jenkins文件做的另外一件事是，在文件末尾你可以</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;building the application&#39;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;test&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;testing the application&#39;   </span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;deploy&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;deploying the application&#39;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            &#x2F;&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        success &#123;</span><br><span class="line">          &#x2F;&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        failure &#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>常用的语法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">CODE_CHANGES &#x3D; getGitChanges()</span><br><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    stages &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;building the application&#39;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;test&quot;) &#123;</span><br><span class="line">          when &#123;</span><br><span class="line">             expression &#123;</span><br><span class="line">                BRANCH_NAME &#x3D;&#x3D; &#39;dev&#39;  &amp;&amp; CODE_CHANGES &#x3D;&#x3D; true</span><br><span class="line">             &#125;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;testing the application&#39;   </span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;deploy&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;deploying the application&#39;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    post &#123;</span><br><span class="line">        always &#123;</span><br><span class="line">            &#x2F;&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line">        success &#123;</span><br><span class="line">          &#x2F;&#x2F;</span><br><span class="line">        &#125;</span><br><span class="line">        failure &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="你的版本，有哪些变量-可以访问下面url"><a href="#你的版本，有哪些变量-可以访问下面url" class="headerlink" title="你的版本，有哪些变量,可以访问下面url"></a>你的版本，有哪些变量,可以访问下面url</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http:&#x2F;&#x2F;192.168.153.103&#x2F;env-vars.html&#x2F;</span><br></pre></td></tr></table></figure><h2 id="定义自己的环境变量"><a href="#定义自己的环境变量" class="headerlink" title="定义自己的环境变量"></a>定义自己的环境变量</h2><p>jenkins文件种有一个称为环境的属性</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">pipeline &#123;</span><br><span class="line">    agent any</span><br><span class="line">    &#x2F;&#x2F; 在此处定义的任何环境变量都将适用于所有</span><br><span class="line">    environment &#123;</span><br><span class="line">        NEW_VERSION &#x3D; &#39;1.3.0&#39;</span><br><span class="line">    &#125;</span><br><span class="line">    stages &#123;</span><br><span class="line">       stage(&quot;build&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;building the application&#39;</span><br><span class="line">             echo &quot;building version $&#123;NEW_VERSION&#125;&quot;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;test&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;testing the application&#39;   </span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">       stage(&quot;deploy&quot;) &#123;</span><br><span class="line">          steps &#123;</span><br><span class="line">             echo &#39;deploying the application&#39;</span><br><span class="line">          &#125;        </span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">echo 打印变量的时候需要加 &quot; &quot;  变量是 $&#123;变量名&#125;</span><br><span class="line">比如 echo &#39;building version $&#123;NEW_VERSION&#125;&#39;  ,</span><br><span class="line">单引号会原样输出变量名</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>centos 7 源码安装 python3</title>
      <link href="2021/01/28/centos-7-%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85-python3/"/>
      <url>2021/01/28/centos-7-%E6%BA%90%E7%A0%81%E5%AE%89%E8%A3%85-python3/</url>
      
        <content type="html"><![CDATA[<hr><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#!&#x2F;bin&#x2F;bash</span><br><span class="line"></span><br><span class="line"># 安装依赖包</span><br><span class="line">yum install -y zlib-devel bzip2-devel openssl-devel ncurses-devel gcc gcc-c++</span><br><span class="line"></span><br><span class="line">yum install -y sqlite-devel readline-devel tk-devel gdbm-devel</span><br><span class="line"></span><br><span class="line">yum install -y db4-devel libpcap-devel xz-devel wget libffi-devel</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 下载软件包</span><br><span class="line">wget https:&#x2F;&#x2F;www.python.org&#x2F;ftp&#x2F;python&#x2F;3.6.6&#x2F;Python-3.6.6.tar.xz</span><br><span class="line"></span><br><span class="line"># 解压缩软件包</span><br><span class="line">xz -d Python-3.6.6.tar.xz &amp;&amp; tar xvf Python-3.6.6.tar</span><br><span class="line"></span><br><span class="line"># 编译安装</span><br><span class="line">cd Python-3.6.6 &amp;&amp; .&#x2F;configure --prefix&#x3D;&#x2F;usr&#x2F;local&#x2F;python3 &amp;&amp; make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"># 创建python3和pip3的软链接</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;python3 &#x2F;usr&#x2F;bin&#x2F;python3</span><br><span class="line">ln -s &#x2F;usr&#x2F;local&#x2F;python3&#x2F;bin&#x2F;pip3 &#x2F;usr&#x2F;bin&#x2F;pip3</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>jenkins用户权限设置</title>
      <link href="2021/01/28/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/"/>
      <url>2021/01/28/jenkins%E7%94%A8%E6%88%B7%E6%9D%83%E9%99%90%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="创建用户："><a href="#创建用户：" class="headerlink" title="创建用户："></a>创建用户：</h2><p>用户名：zhangsan ,密码 zhangsan123<br><img src="http://static.zybuluo.com/sjl--3306/76u82tzgywqrkjfozrgdqtnb/image_1em93t1968n816ho17d9pbo1mqt9.png" alt="image_1em93t1968n816ho17d9pbo1mqt9.png-190.9kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/hho5swqqthjyyaejfekt3pae/image_1em942k9i1hrq14mq1r4cmnsgasm.png" alt="image_1em942k9i1hrq14mq1r4cmnsgasm.png-191.6kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/lr8ti6a1pr8rjnd62u1cutle/image_1em944pcd1tjseun1h1h2fi19vl1j.png" alt="image_1em944pcd1tjseun1h1h2fi19vl1j.png-164.7kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/g3cp2bcgc9x8jow1rnja64t3/image_1em949ids9j12ts1ec916ts1j2020.png" alt="image_1em949ids9j12ts1ec916ts1j2020.png-78.2kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/qaigkfl9nipsagoloyrs7u2v/image_1em94drta6kll521tqp1uvjfn42d.png" alt="image_1em94drta6kll521tqp1uvjfn42d.png-210.3kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/hstfqikdty1fbviuwx3taa0o/image_1em94fmiglnu1mp8ucc1fjjq6q2q.png" alt="image_1em94fmiglnu1mp8ucc1fjjq6q2q.png-163.6kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/qvaafwvyjt6br0cxzzkpw0kz/image_1em94gojfnk1kbeaq4hcvs1p37.png" alt="image_1em94gojfnk1kbeaq4hcvs1p37.png-112kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/ekdpwmsowzv3banplcb0elw4/image_1em94iij31tbh1p35iqqes2ckn3k.png" alt="image_1em94iij31tbh1p35iqqes2ckn3k.png-54.8kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/b61yioxluoyyb3obs5n5e5f8/image_1em94lqna11s7bs51rje1mm31mef41.png" alt="image_1em94lqna11s7bs51rje1mm31mef41.png-34.3kB"><br></br><br><img src="http://static.zybuluo.com/sjl--3306/qx786btnuk37dnk1ewo8qgjs/image_1em94n84a14hf1hf4121e155315c04e.png" alt="image_1em94n84a14hf1hf4121e155315c04e.png-85.5kB"><br><img src="http://static.zybuluo.com/sjl--3306/vp8bo0uusa82l4fpalybx7lb/image_1em94rjs31rac9kdnuvdjdipm4r.png" alt="image_1em94rjs31rac9kdnuvdjdipm4r.png-89.9kB"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>基于Docker构建Jenkins CI平台</title>
      <link href="2021/01/28/%E5%9F%BA%E4%BA%8EDocker%E6%9E%84%E5%BB%BAJenkins-CI%E5%B9%B3%E5%8F%B0/"/>
      <url>2021/01/28/%E5%9F%BA%E4%BA%8EDocker%E6%9E%84%E5%BB%BAJenkins-CI%E5%B9%B3%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<hr><p>三台主机<br>系统： centos 7.5    IP:  192.168.153.101      (gitlab)<br>系统： centos 7.5    IP:  192.168.153.102      (jenkins)<br>系统： centos 7.5    IP:  192.168.153.103      (harbor)</p><p>三台主机分别安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">下载阿里云的docker yum源,并安装</span><br><span class="line"># wget https:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;docker-ce&#x2F;linux&#x2F;centos&#x2F;docker-ce.repo -O &#x2F;etc&#x2F;yum.repos.d&#x2F;docker-ce.repo</span><br><span class="line"># yum -y install docker-ce</span><br><span class="line"></span><br><span class="line">启动docker,并设置docker开机自启</span><br><span class="line"># systemctl start docker</span><br><span class="line"># systemctl enable docker</span><br><span class="line"></span><br><span class="line">配置docker 加速</span><br><span class="line">cat &gt; &#x2F;etc&#x2F;docker&#x2F;daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;6ze43vnb.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="部署gitlab-192-168-153-101"><a href="#部署gitlab-192-168-153-101" class="headerlink" title="部署gitlab   (192.168.153.101)"></a>部署gitlab   (192.168.153.101)</h1><h2 id="部署gitlab"><a href="#部署gitlab" class="headerlink" title="部署gitlab"></a>部署gitlab</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name gitlab \</span><br><span class="line">  -p 8443:443 \</span><br><span class="line">  -p 9999:80 \</span><br><span class="line">  -p 9998:22 \</span><br><span class="line">  -v $PWD&#x2F;config:&#x2F;etc&#x2F;gitlab \</span><br><span class="line">  -v $PWD&#x2F;logs:&#x2F;var&#x2F;log&#x2F;gitlab \</span><br><span class="line">  -v $PWD&#x2F;data:&#x2F;var&#x2F;opt&#x2F;gitlab \</span><br><span class="line">  -v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime \</span><br><span class="line">  lizhenliang&#x2F;gitlab-ce-zh:latest</span><br></pre></td></tr></table></figure><p>访问地址：<a href="http://ip:9999/">http://IP:9999</a><br><img src="http://static.zybuluo.com/sjl--3306/z8doo0lz4n6yjohp1nvvwgpi/image_1ea9aukiiah1n7n1gnc11hi12or9.png" alt="image_1ea9aukiiah1n7n1gnc11hi12or9.png-71.8kB"><br>初次会先设置管理员密码 ，然后登陆，默认管理员用户名root，密码就是刚设置的。<br>密码为  password123qwer<br><br /><br>初始化设置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;root&#x2F;config&#x2F;gitlab.rb</span><br><span class="line">external_url &#39;http:&#x2F;&#x2F;192.168.153.101&#39;</span><br><span class="line">gitlab_rails[&#39;gitlab_ssh_host&#39;] &#x3D; &#39;192.168.153.101&#39;</span><br><span class="line">gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] &#x3D; 9998</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/sjl--3306/2rcw9oekypvans66vqslynya/image_1ea9b2foe19satttqe164b1bkcm.png" alt="image_1ea9b2foe19satttqe164b1bkcm.png-82.9kB"></p><h3 id="新建一个java-demo项目"><a href="#新建一个java-demo项目" class="headerlink" title="新建一个java-demo项目"></a>新建一个java-demo项目</h3><p><img src="http://static.zybuluo.com/sjl--3306/o23b62w23jecfvtzcyom3zbn/image_1ea9eih4m3537do64ajrpglu1g.png" alt="image_1ea9eih4m3537do64ajrpglu1g.png-95.1kB"></p><h2 id="创建项目，提交测试代码-192-168-153-103执行操作"><a href="#创建项目，提交测试代码-192-168-153-103执行操作" class="headerlink" title="创建项目，提交测试代码 (192.168.153.103执行操作)"></a>创建项目，提交测试代码 (192.168.153.103执行操作)</h2><p>把代码上传到192.168.153.103主机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 项目改名为java-demo</span><br><span class="line">[root@centos-3 ~]# mv tomcat-java-demo-master java-demo</span><br><span class="line"></span><br><span class="line"># 提交代码到gitlab上</span><br><span class="line">[root@centos-3 ~]# git init java-demo&#x2F;</span><br><span class="line">[root@centos-3 ~]# cd java-demo</span><br><span class="line">[root@centos-3 ~]# git add *</span><br><span class="line">[root@centos-3 java-demo]# git config --global user.name &quot;shujiangle&quot;  </span><br><span class="line">[root@centos-3 java-demo]# git config --global user.email &quot;shujiangle@qq.com&quot;</span><br><span class="line">[root@centos-3 java-demo]# git commit -m &quot;初始化提交&quot;</span><br><span class="line">[root@centos-3 java-demo]# git remote add origin http:&#x2F;&#x2F;192.168.153.101:9999&#x2F;root&#x2F;java-demo.git</span><br><span class="line">[root@centos-3 java-demo]# git push -u origin master</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/sjl--3306/s1dbmuboscvl6msb5b72mamr/image_1ea9ea6401iqibfa1rjrrf9cdq13.png" alt="image_1ea9ea6401iqibfa1rjrrf9cdq13.png-115.4kB"></p><h1 id="部署harbor-192-168-153-103"><a href="#部署harbor-192-168-153-103" class="headerlink" title="部署harbor (192.168.153.103)"></a>部署harbor (192.168.153.103)</h1><h2 id="Harbor安装"><a href="#Harbor安装" class="headerlink" title="Harbor安装"></a>Harbor安装</h2><ol><li>安装 docker 与 docker-compose<br>上传  二进制包 docker-compose-Linux-x86_64 和 harbor 压缩包<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-3 ~]# mv docker-compose-Linux-x86_64 &#x2F;usr&#x2F;bin&#x2F;docker-compose</span><br><span class="line">[root@centos-3 ~]# chmod +x &#x2F;usr&#x2F;bin&#x2F;docker-compose</span><br><span class="line">[root@centos-3 ~]# cd harbor&#x2F;</span><br><span class="line">[root@centos-3 harbor]# vim harbor.yml</span><br><span class="line">hostname: 192.168.153.103</span><br><span class="line">[root@centos-3 harbor]# .&#x2F;prepare</span><br><span class="line">[root@centos-3 harbor]# .&#x2F;install.sh</span><br></pre></td></tr></table></figure>访问 <a href="http://192.168.153.103/">http://192.168.153.103/</a><br>用户名 admin 密码 Harbor12345<br><img src="http://static.zybuluo.com/sjl--3306/p7705qmhxuupimq875wnn8nm/image_1eabgcdbq1r791in616je1rc3k9k9.png" alt="image_1eabgcdbq1r791in616je1rc3k9k9.png-112.4kB"></li></ol><h2 id="上传tomcat镜像到harbor"><a href="#上传tomcat镜像到harbor" class="headerlink" title="上传tomcat镜像到harbor"></a>上传tomcat镜像到harbor</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"># Jenkins主机配置Docker可信任</span><br><span class="line">[root@centos-3 tomcat]# cat &#x2F;etc&#x2F;docker&#x2F;daemon.json</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https:&#x2F;&#x2F;6ze43vnb.mirror.aliyuncs.com&quot;],</span><br><span class="line">  &quot;insecure-registries&quot;: [&quot;192.168.153.103&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[root@centos-3 harbor]# systemctl restart docker</span><br><span class="line">[root@centos-3 harbor]# docker-compose up -d</span><br><span class="line"></span><br><span class="line"># 进入tomcat目录</span><br><span class="line">[root@centos-3 tomcat]# docker build -t tomcat:v1 .</span><br><span class="line">[root@centos-3 tomcat]# docker tag tomcat:v1 192.168.153.103&#x2F;library&#x2F;tomcat:v1</span><br><span class="line">[root@centos-3 tomcat]# docker push 192.168.153.103&#x2F;library&#x2F;tomcat:v1</span><br></pre></td></tr></table></figure><p>效果如图<br><img src="http://static.zybuluo.com/sjl--3306/audu78hrhkk47q3qlni3lrsw/image_1eabj0h1m16o1b3ha9j1ch3rmcm.png" alt="image_1eabj0h1m16o1b3ha9j1ch3rmcm.png-111.2kB"></p><h1 id="部署jenkins-192-168-153-102"><a href="#部署jenkins-192-168-153-102" class="headerlink" title="部署jenkins (192.168.153.102)"></a>部署jenkins (192.168.153.102)</h1><h2 id="准备JDK和Maven环境"><a href="#准备JDK和Maven环境" class="headerlink" title="准备JDK和Maven环境"></a>准备JDK和Maven环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-2 ~]# tar -zxvf jdk-8u45-linux-x64.tar.gz</span><br><span class="line">[root@centos-2 ~]# tar -zxvf apache-maven-3.5.0-bin.tar.gz</span><br><span class="line">[root@centos-2 ~]# mv apache-maven-3.5.0 &#x2F;usr&#x2F;local&#x2F;apache-maven-3.5.0</span><br><span class="line">[root@centos-2 ~]# mv jdk1.8.0_45 &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_45</span><br></pre></td></tr></table></figure><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name jenkins -p 80:8080 -p 50000:50000 -u root \</span><br><span class="line">-v &#x2F;opt&#x2F;jenkins_home:&#x2F;var&#x2F;jenkins_home \</span><br><span class="line">-v &#x2F;var&#x2F;run&#x2F;docker.sock:&#x2F;var&#x2F;run&#x2F;docker.sock \</span><br><span class="line">-v &#x2F;usr&#x2F;bin&#x2F;docker:&#x2F;usr&#x2F;bin&#x2F;docker \</span><br><span class="line">-v &#x2F;usr&#x2F;local&#x2F;apache-maven-3.5.0:&#x2F;usr&#x2F;local&#x2F;maven \</span><br><span class="line">-v &#x2F;usr&#x2F;local&#x2F;jdk1.8.0_45:&#x2F;usr&#x2F;local&#x2F;jdk \</span><br><span class="line">-v &#x2F;etc&#x2F;localtime:&#x2F;etc&#x2F;localtime \</span><br><span class="line">--name jenkins jenkins&#x2F;jenkins:lts</span><br></pre></td></tr></table></figure><p>浏览器输入 192.168.153.102 访问<br><img src="http://static.zybuluo.com/sjl--3306/60ej6m9qpoucu6nng1lax4cp/image_1eabjj4sh1sl4192odnv12691iru13.png" alt="image_1eabjj4sh1sl4192odnv12691iru13.png-310.1kB"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看管理员密码</span><br><span class="line">[root@centos-2 local]# docker logs jenkins</span><br></pre></td></tr></table></figure><p><img src="http://static.zybuluo.com/sjl--3306/y4dt0sgfiwpzavxrl1lph6e5/image_1eabjpoaq1u7d6eb1mtmcqc3oq1g.png" alt="image_1eabjpoaq1u7d6eb1mtmcqc3oq1g.png-47.4kB"></p><p><img src="http://static.zybuluo.com/sjl--3306/nrj1hay4328dkszdg06ropvz/image_1eabk03i11jnoc6m1e747elgj41t.png" alt="image_1eabk03i11jnoc6m1e747elgj41t.png-348.1kB"></p><p><img src="http://static.zybuluo.com/sjl--3306/l9q2t2pwxpfe1tl3to2dp34s/image_1eabk1vr81o9133kju71uqs11f82a.png" alt="image_1eabk1vr81o9133kju71uqs11f82a.png-423.5kB"></p><p><img src="http://static.zybuluo.com/sjl--3306/n6dnx6woiyp80covxhrpc2zu/image_1eabk4h701ejed4qbv41ujg13tp2n.png" alt="image_1eabk4h701ejed4qbv41ujg13tp2n.png-275.2kB"></p><p><img src="http://static.zybuluo.com/sjl--3306/js6eqcgah3babbjsmhc4j07f/image_1eabk6a7c5e31kg35a610er1cvj34.png" alt="image_1eabk6a7c5e31kg35a610er1cvj34.png-293.5kB"></p><h2 id="jenkins-插件安装加速和-maven-构建加速"><a href="#jenkins-插件安装加速和-maven-构建加速" class="headerlink" title="jenkins 插件安装加速和 maven 构建加速"></a>jenkins 插件安装加速和 maven 构建加速</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@centos-2 ~]# cd &#x2F;opt&#x2F;jenkins_home&#x2F;updates</span><br><span class="line">[root@centos-2 updates]# sed -i &#39;s&#x2F;http:\&#x2F;\&#x2F;updates.jenkins-ci.org\&#x2F;download&#x2F;https:\&#x2F;\&#x2F;mirrors.tuna.tsinghua.edu.cn\&#x2F;jenkins&#x2F;g&#39; default.json &amp;&amp; sed -i &#39;s&#x2F;http:\&#x2F;\&#x2F;www.google.com&#x2F;https:\&#x2F;\&#x2F;www.baidu.com&#x2F;g&#39; default.json</span><br><span class="line"></span><br><span class="line">vim &#x2F;usr&#x2F;local&#x2F;maven&#x2F;conf&#x2F;settings.xml</span><br><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;aliyunmaven&lt;&#x2F;id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;*&lt;&#x2F;mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;阿里云公共仓库&lt;&#x2F;name&gt;</span><br><span class="line">    &lt;url&gt;https:&#x2F;&#x2F;maven.aliyun.com&#x2F;repository&#x2F;public&lt;&#x2F;url&gt;</span><br><span class="line">&lt;&#x2F;mirror&gt;</span><br></pre></td></tr></table></figure><h2 id="安装jenkins-插件-git-和pipline"><a href="#安装jenkins-插件-git-和pipline" class="headerlink" title="安装jenkins 插件 git 和pipline"></a>安装jenkins 插件 git 和pipline</h2><p><img src="http://static.zybuluo.com/sjl--3306/90kccnqlmad89zr3dmvjiklv/image_1eabkv8r4128uhnot28741mfl4b.png" alt="image_1eabkv8r4128uhnot28741mfl4b.png-203.7kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/wi0opt5b3d1fh4mygs6ab4dw/image_1eabl0frp1fjib3ent9n6n1i5i4o.png" alt="image_1eabl0frp1fjib3ent9n6n1i5i4o.png-98.7kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/nuffsy5nfcz6mjpag0pe5snl/image_1eabl1iu57mi1h3uc8b149mv8v55.png" alt="image_1eabl1iu57mi1h3uc8b149mv8v55.png-155.8kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/medq69f9uzjgwszxzes0b7ff/image_1eabl32c38d8ucu1hcjvocmvh5i.png" alt="image_1eabl32c38d8ucu1hcjvocmvh5i.png-153.1kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/bgwv9nsjt88uuxo958qcs2mv/image_1eabl3vhmec6pv2vnea61knv5v.png" alt="image_1eabl3vhmec6pv2vnea61knv5v.png-125.3kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/sllq75jn0etpfoa562cn2g1f/image_1eabl7n9mokhea1uocdn8aca6c.png" alt="image_1eabl7n9mokhea1uocdn8aca6c.png-145.9kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/bfiyvk1b4j88enwz3gx2xpm4/image_1eabla0eh1jvl1ednli6q9bk536p.png" alt="image_1eabla0eh1jvl1ednli6q9bk536p.png-130.6kB"><br><br /></p><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><p><img src="http://static.zybuluo.com/sjl--3306/nkg7u5rnh97zmz9v4tovoq1r/image_1eabljkda1acd1bec1qlrbha14kv76.png" alt="image_1eabljkda1acd1bec1qlrbha14kv76.png-153.2kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/b5iqf5nrimt4ho9hfd7l1iow/image_1eabln9c56se1foh3ag1j7g1u9m7j.png" alt="image_1eabln9c56se1foh3ag1j7g1u9m7j.png-248.5kB"><br><br /><br><img src="http://static.zybuluo.com/sjl--3306/ug5v79tuof2p63frlpda9grp/image_1eabloigh5h1tu110ccdig183i80.png" alt="image_1eabloigh5h1tu110ccdig183i80.png-91.5kB"><br><img src="http://static.zybuluo.com/sjl--3306/1pwz28gdwuu3mu7x6ed1dmlm/image_1eablp8bucgp17guu8pk5c1kpo8d.png" alt="image_1eablp8bucgp17guu8pk5c1kpo8d.png-468.1kB"><br>welcome 项目提前在 Harbor 仓库创建好 ↑ 。<br><img src="http://static.zybuluo.com/sjl--3306/vuij2xydjzj4swtytq8l2ckv/image_1eabmg4ga1d1obah1k321a817e2d9.png" alt="image_1eabmg4ga1d1obah1k321a817e2d9.png-91.6kB"><br>修改 docker_registry_auth、git_auth 凭据：<br><img src="http://static.zybuluo.com/sjl--3306/w2ensz039objn8juuusuqxoo/image_1eablpv8ijhm15071o7j12cg1h8q.png" alt="image_1eablpv8ijhm15071o7j12cg1h8q.png-159kB"><br><img src="http://static.zybuluo.com/sjl--3306/d1bhsy4pd54r0qwf12um3qxx/image_1eablq70b1mmu6me55r4dqvsv97.png" alt="image_1eablq70b1mmu6me55r4dqvsv97.png-213.9kB"><br><img src="http://static.zybuluo.com/sjl--3306/wdo13n5yzd1dj0nfcalv9v1k/image_1eablqgm61d361fn01f2e1e3lt0j9k.png" alt="image_1eablqgm61d361fn01f2e1e3lt0j9k.png-88.5kB"><br><img src="http://static.zybuluo.com/sjl--3306/65ng00us80rmmq3e1wl5uiub/image_1eablr7ef1g0nmj7vc9vts1ctua1.png" alt="image_1eablr7ef1g0nmj7vc9vts1ctua1.png-122.3kB"><br><img src="http://static.zybuluo.com/sjl--3306/ieqcsm4vup36ooaxjr44qv80/image_1eablrm60163v1hm21ott1iiof3ae.png" alt="image_1eablrm60163v1hm21ott1iiof3ae.png-131.3kB"></p><p>添加拉取 git 代码的凭据：<br><img src="http://static.zybuluo.com/sjl--3306/qraovo04wcrh9m8vc2vwhnda/image_1eablt1pung11cuklnkhiht5par.png" alt="image_1eablt1pung11cuklnkhiht5par.png-179.1kB"><br><img src="http://static.zybuluo.com/sjl--3306/e6vvu9imtpvh3njckous60zs/image_1eabltavr1nm1n6o0teq2176cb8.png" alt="image_1eabltavr1nm1n6o0teq2176cb8.png-175.9kB"><br><img src="http://static.zybuluo.com/sjl--3306/fxxf7cuqnhpsurzftdyrta48/image_1eabltj3ear8k231mlrd3d1lrgbl.png" alt="image_1eabltj3ear8k231mlrd3d1lrgbl.png-222.9kB"><br><img src="http://static.zybuluo.com/sjl--3306/f5m9440bjx6a55jjrfivtia7/image_1eabltvv71tuh4me1b5h1pd71jdic2.png" alt="image_1eabltvv71tuh4me1b5h1pd71jdic2.png-241.8kB"><br><img src="http://static.zybuluo.com/sjl--3306/f3rcp4bfkb2hyks6soj2i1aj/image_1eablu5ml12mn1ei31hr91nm9bd8cf.png" alt="image_1eablu5ml12mn1ei31hr91nm9bd8cf.png-148.3kB"><br><img src="http://static.zybuluo.com/sjl--3306/wu01l7o2f8fwz0io9wggx10d/image_1eablucn4s5s1m8lqjn116r5b4cs.png" alt="image_1eablucn4s5s1m8lqjn116r5b4cs.png-168kB"><br><img src="http://static.zybuluo.com/sjl--3306/h7lfts4kk3hyaj5iu880et4m/image_1eabnks1aj5e1tfe6uas3llvbdm.png" alt="image_1eabnks1aj5e1tfe6uas3llvbdm.png-125.4kB"></p><p>最后效果<br><img src="http://static.zybuluo.com/sjl--3306/vyrz9h1a5a2g1ynze34ngxdi/image_1eabntce41g3b1tltbkiu8clvoe3.png" alt="image_1eabntce41g3b1tltbkiu8clvoe3.png-2619.2kB"></p>]]></content>
      
      
      <categories>
          
          <category> k8s </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
